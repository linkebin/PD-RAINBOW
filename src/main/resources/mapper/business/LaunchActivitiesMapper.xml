<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yidusoft.project.business.dao.LaunchActivitiesMapper">
    <resultMap id="BaseResultMap" type="com.yidusoft.project.business.domain.LaunchActivities">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID_" jdbcType="VARCHAR" property="id"/>
        <result column="activity_code" jdbcType="VARCHAR" property="activityCode"/>
        <result column="activity_name" jdbcType="VARCHAR" property="activityName"/>
        <result column="activity_aim" jdbcType="VARCHAR" property="activityAim"/>
        <result column="participant" jdbcType="VARCHAR" property="participant"/>
        <result column="activity_addr" jdbcType="VARCHAR" property="activityAddr"/>
        <result column="contacts" jdbcType="VARCHAR" property="contacts"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="activity_total" jdbcType="INTEGER" property="activityTotal"/>
        <result column="uestionnaire_id" jdbcType="VARCHAR" property="uestionnaireId"/>
        <result column="uestionnaire_name" jdbcType="VARCHAR" property="uestionnaireName"/>
        <result column="activity_start" jdbcType="TIMESTAMP" property="activityStart"/>
        <result column="activity_end" jdbcType="TIMESTAMP" property="activityEnd"/>
        <result column="uestionnaire_uri" jdbcType="VARCHAR" property="uestionnaireUri"/>
        <result column="activity_porn" jdbcType="VARCHAR" property="activityPorn"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deleted" jdbcType="INTEGER" property="deleted"/>
        <result column="Initiator_type" jdbcType="INTEGER" property="initiatorType"/>
        <result column="activity_status" jdbcType="INTEGER" property="activityStatus"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
    </resultMap>

    <select id="getActivityAll" resultMap="BaseResultMap" parameterType="String">
        SELECT * FROM launch_activities WHERE deleted=0
        <if test="userId!=null and userId!=''">
            AND user_id LIKE '%${userId}%'
        </if>
        <if test="activityName!=null and activityName!=''">
            AND activity_name LIKE '%${activityName}%'
        </if>
        <if test="initiatorType!=null and initiatorType!=''">
            AND Initiator_type = #{initiatorType}
        </if>
        <if test="activityStatus!=null and activityStatus!=''">
            AND activity_status = #{activityStatus}
        </if>
        <if test="activityAim!=null and activityAim!=''">
            AND activity_aim LIKE '%${activityAim}%'
        </if>

        <if test="activityEnd!=null">
            AND activity_end &gt;= #{activityEnd}
        </if>

        ORDER BY create_time DESC
    </select>

    <select id="getIdByPorn" resultMap="BaseResultMap" parameterType="com.yidusoft.project.business.domain.LaunchActivities">
        SELECT * FROM launch_activities where deleted=0 AND activity_porn=#{activityPorn} AND id_=#{id}
    </select>

    <select id="getActivityById" resultMap="BaseResultMap" parameterType="String">
        SELECT * FROM launch_activities where deleted=0 AND id_=#{id}
        AND now() BETWEEN activity_start AND activity_end
    </select>

    <select id="getActivitySchedule"  resultType="java.util.Map"  parameterType="String">
          SELECT
               a.activity_name,date_format(a.activity_start,'%Y-%m-%d') as  activity_start,
               date_format(a.activity_end,'%Y-%m-%d') as  activity_end,q.questionnaire_name,
               GROUP_CONCAT(d.time_consuming) time_consuming,
               MAX(TIME_TO_SEC(DATE_FORMAT(CONCAT('0000-00-00 ',d.time_consuming),'%H:%i:%s'))) time_second_max,
               MIN(TIME_TO_SEC(DATE_FORMAT(CONCAT('0000-00-00 ',d.time_consuming),'%H:%i:%s'))) time_second_min,
               cast((AVG(TIME_TO_SEC(DATE_FORMAT(CONCAT('0000-00-00 ',d.time_consuming),'%H:%i:%s')))) as dec(18,2))  time_second_avg,
            ( SELECT
               COUNT(0)
               from
               data_acquisition
               WHERE  activity_id=#{activityId}
            ) as  user_number,
               a.activity_total
           FROM
            launch_activities a
           LEFT JOIN
             data_acquisition d
           ON  a.ID_=d.activity_id
           LEFT JOIN
             questionnaire q
           ON  d.data_question=q.ID_
           WHERE
            a.ID_=#{activityId}
            AND  a.deleted=0
            GROUP BY   a.activity_name,activity_start,activity_end,questionnaire_name,a.activity_total
    </select>


    <select id="getActivityNumberPeopleForResult" resultType="java.util.Map"  parameterType="String">
          SELECT
            d.data_result,p.sex,p.age
            FROM
            data_acquisition d
            LEFT JOIN
            active_participant p
            ON d.user_id=p.id_
            WHERE d.activity_id=#{activityId}
    </select>

    <select id="getLaunchActivityAll" resultType="java.util.Map"  parameterType="java.util.Map">
      SELECT
        l.id_,l.activity_name,l.activity_addr,l.creator,l.activity_total,
            ( SELECT
               COUNT(0)
               from
               data_acquisition
               WHERE  activity_id=l.id_
            )  as partake_total,
        CASE
           WHEN
              ( SELECT
                    COUNT(0)
                    from
                    data_acquisition
                    WHERE  activity_id=l.id_
                ) !=0
             THEN   cast((SUM(1)/l.activity_total) as dec(18,4))
             ELSE   0
           END  as proportion,
        CASE
            WHEN l.initiator_type=1  THEN '企业活动'
            WHEN l.initiator_type=2  THEN '调研活动'
            WHEN l.initiator_type=3  THEN '公益活动'
            END as initiatorType,
        CASE
            WHEN  CURDATE() &lt;  l.activity_start  THEN '未开始'
            WHEN  CURDATE() &gt; l.activity_end THEN '已完成'
            WHEN  CURDATE() BETWEEN  l.activity_start AND l.activity_end    THEN '进行中'
            END  as activityStatus
        FROM  launch_activities l
        LEFT JOIN data_acquisition d
        ON  l.ID_=d.activity_id
        WHERE 1=1
        <if test="activityName!='' and  activityName!=null">
            AND   l.activity_name  like   '%${activityName}%'
        </if >
        <if test="activityAddr!='' and  activityAddr!=null">
            AND   l.activity_addr  like   '%${activityAddr}%'
        </if >
        <if test="creator!='' and  creator!=null">
            AND   l.creator  like   '%${creator}%'
        </if >
        <if test="userId!='' and  userId!=null">
            AND   l.user_id=#{userId}
        </if >
        AND  l.deleted=0
        GROUP BY   l.id_,l.activity_name,l.initiator_type,l.activity_addr,l.creator,l.activity_total
        HAVING    1=1
        <if test="activityStatus!='' and  activityStatus!=null">
            AND  activityStatus=#{activityStatus}
        </if >
        <if test="initiatorType!='' and  initiatorType!=null">
            AND  initiatorType=#{initiatorType}
        </if >
        ORDER  BY l.create_time DESC

    </select>

</mapper>