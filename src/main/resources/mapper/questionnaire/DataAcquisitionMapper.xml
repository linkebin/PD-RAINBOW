<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yidusoft.project.questionnaire.dao.DataAcquisitionMapper">
    <resultMap id="BaseResultMap" type="com.yidusoft.project.questionnaire.domain.DataAcquisition">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID_" jdbcType="VARCHAR" property="id"/>
        <result column="data_code" jdbcType="VARCHAR" property="dataCode"/>
        <result column="data_user" jdbcType="VARCHAR" property="dataUser"/>
        <result column="data_question" jdbcType="VARCHAR" property="dataQuestion"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deleted" jdbcType="INTEGER" property="deleted"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="activity_id" jdbcType="VARCHAR" property="activityId"/>
        <result column="total_score" jdbcType="INTEGER" property="totalScore"/>
        <result column="data_result" jdbcType="VARCHAR" property="dataResult"/>
        <result column="time_consuming" jdbcType="VARCHAR" property="timeConsuming"/>
    </resultMap>


    <resultMap id="QuestionnaireUseInfoResultMap" type="com.yidusoft.project.questionnaire.domain.DataAcquisition">

        <id column="ID_" jdbcType="VARCHAR" property="id"/>
        <result column="data_code" jdbcType="VARCHAR" property="dataCode"/>
        <result column="data_user" jdbcType="VARCHAR" property="dataUser"/>
        <result column="data_question" jdbcType="VARCHAR" property="dataQuestion"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deleted" jdbcType="INTEGER" property="deleted"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="activity_id" jdbcType="VARCHAR" property="activityId"/>
        <result column="total_score" jdbcType="INTEGER" property="totalScore"/>
        <result column="data_result" jdbcType="VARCHAR" property="dataResult"/>
        <result column="visitor_name" jdbcType="VARCHAR" property="visitorName"/>
        <result column="questionnaire_name" jdbcType="VARCHAR" property="questionnaireName"/>
        <result column="time_consuming" jdbcType="VARCHAR" property="timeConsuming"/>
    </resultMap>


    <select id="questionnaireUseInfoListByPage" resultMap="QuestionnaireUseInfoResultMap" parameterType="String">
   SELECT d.*, q.questionnaire_name, v.visitor_name
     FROM questionnaire q, data_acquisition d, visitor_register v
      WHERE d.deleted = 0
          AND q.ID_ IN (SELECT d.data_question FROM data_acquisition WHERE DELETED = 0)
          AND v.ID_ IN (SELECT d.user_id FROM data_acquisition WHERE deleted = 0)
           AND v.creator=#{creator}
           order by     d.create_time  desc
  </select>
    <select id="findQuestionnaireForVisitor" resultMap="QuestionnaireUseInfoResultMap" parameterType="com.yidusoft.project.questionnaire.domain.DataAcquisition">
        SELECT d.*,q.questionnaire_name  from
        data_acquisition  d
        LEFT JOIN
        questionnaire   q
        ON  q.ID_=d.data_question
        WHERE   d.create_time=#{createTime}  AND d.user_id=#{userId}
    </select>

    <!--查找我的问卷-->
    <select id="findMyQuestionnaireListByPage" resultMap="QuestionnaireUseInfoResultMap" parameterType="Map">
        SELECT d.*, q.questionnaire_name, v.visitor_name
        FROM questionnaire q, data_acquisition d, visitor_register v
        WHERE d.deleted = 0

        AND q.ID_ IN (SELECT d.data_question FROM data_acquisition WHERE DELETED = 0)
        AND v.ID_ IN (SELECT d.user_id FROM data_acquisition WHERE deleted = 0)
        AND v.creator = #{dataUser}
        <if test="createTime != null and createTime != ''">
            AND d.create_time &gt;= #{start} AND d.create_time &lt;= #{end}
        </if>
        <if test="visitorName != null and visitorName != ''">
            AND (v.visitor_name = #{visitorName})
        </if>
        <if test="questionnaireName != null and questionnaireName != ''">
            AND (q.questionnaire_name = #{questionnaireName})
        </if>
        order by     d.create_time  desc
    </select>

    <select id="findCountByActivityId" resultType="INTEGER" parameterType="String">
        SELECT count(*) FROM data_acquisition
        WHERE activity_id=#{activityId} AND deleted=0
    </select>

    <select id="getDataAcquisitionTotal" parameterType="String" resultType="int">
        SELECT COUNT(*)  FROM  data_acquisition   WHERE  user_id   =#{userId} AND deleted=0
    </select>

    <select id="getQuestionnaireTypeTotal" parameterType="String" resultMap="QuestionnaireUseInfoResultMap">
            SELECT
              q.questionnaire_type as id_
           FROM  questionnaire q
           LEFT JOIN  data_acquisition  d
           ON d.data_question=q.id_
           WHERE  d.user_id   =#{userId}
           GROUP BY   questionnaire_type


    </select>
    <select id="findDataAcquistionForVisitor" parameterType="com.yidusoft.project.questionnaire.domain.DataAcquisition" resultMap="BaseResultMap">
           SELECT *
            FROM  data_acquisition
            WHERE  data_question  IN
               (SELECT   ID_  FROM questionnaire WHERE   gauge_id=#{dataQuestion})
             AND   user_id =#{userId}
            ORDER BY create_time

    </select>

    <select id="findQuestionnaireForVisitorAll" parameterType="String" resultMap="QuestionnaireUseInfoResultMap">
       SELECT * FROM (
	        SELECT g.id_  as data_question ,g.gauge_name as questionnaire_name
              FROM questionnaire q
              LEFT JOIN  gauge g
              ON  q.gauge_id=g.id_
	        WHERE q.id_ IN   (
	        SELECT
	        data_question
	        FROM  data_acquisition
	        WHERE  user_id=#{userId})
          GROUP BY  g.id_,g.gauge_name )  tt
    </select>

    <select id="findVisitorTime" parameterType="String" resultType="java.util.Map">

     SELECT t.visitor_time,t.visitor_id,r.visitor_name  FROM (
		  SELECT MAX(visitor_time) AS visitor_time,visitor_id FROM   visiting_record
        WHERE visitor_id=#{userId}
        GROUP BY    visitor_id

        UNION ALL

      SELECT MIN(visitor_time) AS visitor_time,visitor_id FROM   visiting_record
        WHERE visitor_id=#{userId}
        GROUP BY    visitor_id ) t
      LEFT JOIN visitor_register r
      ON   t.visitor_id=r.id_
    </select>
</mapper>